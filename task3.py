# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E8wqhjExgrlDQ166_owSt2oJf7c4pI1M
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data=pd.read_csv('/content/sample_data/bank.csv')
data.head()

data.info()

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

# Encode categorical variables
label_encoders = {}
for col in data.select_dtypes(include=['object']).columns:
    le = LabelEncoder()
    data[col] = le.fit_transform(data[col])
    label_encoders[col] = le

data.info()

plt.figure(figsize=(6,4))
sns.countplot(x=data['y'], palette='plasma')
plt.title('Target variable distribution')
plt.xlabel('y')
plt.ylabel('Count')
plt.show()

# Percentage of Attrition
t_var = data['y'].value_counts(normalize=True) * 100
t_var

## TARGET VARIABLE IS IMBALANCED

X = data.drop(columns=['y'])
Y = data['y']
X

from collections import Counter
from imblearn.over_sampling import RandomOverSampler
print(Counter(Y))
rus = RandomOverSampler(random_state = 42)
x,y = rus.fit_resample(X,Y)
print(Counter(y))

# Split into train and test sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42,stratify=y)

## DECISION TREE
dt=DecisionTreeClassifier()
dt.fit(x_train,y_train)
pred=dt.predict(x_test)
pred
acc2=accuracy_score(y_test,pred)
acc2